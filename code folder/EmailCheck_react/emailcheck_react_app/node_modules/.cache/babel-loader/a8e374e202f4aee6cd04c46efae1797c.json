{"ast":null,"code":"var dns = require('dns'),\n    net = require('net'),\n    os = require('os'),\n    async = require('async');\n\nmodule.exports = function (email, callback, timeout, from_email) {\n  timeout = timeout || 5000;\n  from_email = from_email || email;\n  /* Does it look like a valid email? */\n\n  /* Our email regex is vulnerable to REDOS on very large input.\n   *  Valid emails shouldn't be more than 300 characters anyway.\n   *  https://www.rfc-editor.org/errata_search.php?eid=1690 */\n\n  const MAX_EMAIL_LEN = 300;\n\n  if (MAX_EMAIL_LEN < email.length) {\n    callback(null, false);\n    return;\n  }\n\n  if (!/^\\S+@\\S+$/.test(email)) {\n    callback(null, false);\n    return;\n  }\n\n  dns.resolveMx(email.split('@')[1], function (err, addresses) {\n    if (err || addresses.length === 0) {\n      callback(err, false);\n      return;\n    }\n\n    addresses = addresses.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    var res, undetermined;\n    var cond = false,\n        j = 0;\n    async.doWhilst(function (done) {\n      var conn = net.createConnection(25, addresses[j].exchange);\n      var commands = [\"helo \" + addresses[j].exchange, \"mail from: <\" + from_email + \">\", \"rcpt to: <\" + email + \">\"]; // console.log(commands);\n\n      var i = 0;\n      conn.setEncoding('ascii');\n      conn.setTimeout(timeout);\n      conn.on('error', function () {\n        conn.emit('false');\n      });\n      conn.on('false', function () {\n        res = false;\n        undetermined = false;\n        cond = false;\n        done(err, false);\n        conn.removeAllListeners();\n        conn.destroy();\n      });\n      conn.on('connect', function () {\n        conn.on('prompt', function () {\n          if (i < 3) {\n            conn.write(commands[i]);\n            conn.write('\\r\\n');\n            i++;\n          } else {\n            res = true;\n            undetermined = false;\n            cond = false;\n            done(err, true);\n            conn.removeAllListeners();\n            conn.destroy(); //destroy socket manually\n          }\n        });\n        conn.on('undetermined', function () {\n          j++; //in case of an unrecognisable response tell the callback we're not sure\n\n          cond = true;\n          res = false;\n          undetermined = true;\n          done(err, false, true);\n          conn.removeAllListeners();\n          conn.destroy(); //destroy socket manually\n        });\n        conn.on('timeout', function () {\n          conn.emit('undetermined');\n        });\n        conn.on('data', function (data) {\n          if (data.indexOf(\"220\") == 0 || data.indexOf(\"250\") == 0 || data.indexOf(\"\\n220\") != -1 || data.indexOf(\"\\n250\") != -1) {\n            conn.emit('prompt');\n          } else if (data.indexOf(\"\\n550\") != -1 || data.indexOf(\"550\") == 0) {\n            conn.emit('false');\n          } else {\n            conn.emit('undetermined');\n          }\n        });\n      });\n    }, function () {\n      return j < addresses.length && cond;\n    }, function (err) {\n      callback(err, res, undetermined);\n    });\n  });\n}; // compatibility\n\n\nmodule.exports.check = module.exports;","map":{"version":3,"sources":["/home/amit/Documents/javascript/react_js/EmailCheck_react/emailcheck_react_app/node_modules/email-existence/index.js"],"names":["dns","require","net","os","async","module","exports","email","callback","timeout","from_email","MAX_EMAIL_LEN","length","test","resolveMx","split","err","addresses","sort","a","b","priority","res","undetermined","cond","j","doWhilst","done","conn","createConnection","exchange","commands","i","setEncoding","setTimeout","on","emit","removeAllListeners","destroy","write","data","indexOf","check"],"mappings":"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","sourcesContent":["var dns = require('dns'),\n    net = require('net'),\n    os = require('os'),\n\tasync = require('async');\n\nmodule.exports = function (email, callback, timeout, from_email) {\n\ttimeout = timeout || 5000;\n\tfrom_email = from_email || email;\n\n\t/* Does it look like a valid email? */\n\n\t/* Our email regex is vulnerable to REDOS on very large input.\n\t *  Valid emails shouldn't be more than 300 characters anyway.\n\t *  https://www.rfc-editor.org/errata_search.php?eid=1690 */\n\tconst MAX_EMAIL_LEN = 300;\n\tif (MAX_EMAIL_LEN < email.length) {\n\t\tcallback(null, false);\n\t\treturn;\n\t}\n\tif (!/^\\S+@\\S+$/.test(email)) {\n\t\tcallback(null, false);\n\t\treturn;\n\t}\n\n\tdns.resolveMx(email.split('@')[1], function(err, addresses){\n\t\tif (err || addresses.length === 0) {\n\t\t\tcallback(err, false);\n\t\t\treturn;\n\t\t}\n\t\taddresses = addresses.sort(function (a,b) {\n\t\t\treturn a.priority - b.priority\n\t\t})\n\t\tvar res,undetermined;\n\t\tvar cond = false, j =0;\n\t\tasync.doWhilst(function (done) {\n\t\t\tvar conn = net.createConnection(25, addresses[j].exchange);\n\t\t\tvar commands = [ \"helo \" + addresses[j].exchange, \"mail from: <\"+from_email+\">\", \"rcpt to: <\"+email+\">\" ];\n\t\t\t// console.log(commands);\n\t\t\tvar i = 0;\n\t\t\tconn.setEncoding('ascii');\n\t\t\tconn.setTimeout(timeout);\n\t\t\tconn.on('error', function() {\n\t\t\t\tconn.emit('false');\n\t\t\t});\n\t\t\tconn.on('false', function () {\n\t\t\t\tres = false\n\t\t\t\tundetermined = false;\n\t\t\t\tcond = false;\n\t\t\t\tdone(err, false);\n\t\t\t\tconn.removeAllListeners();\n\t\t\t\tconn.destroy();\n\t\t\t});\n\t\t\tconn.on('connect', function() {\n\t\t\t\tconn.on('prompt', function () {\n\t\t\t\t\tif(i < 3){\n\t\t\t\t\t\tconn.write(commands[i]);\n\t\t\t\t\t\tconn.write('\\r\\n');\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tres = true;\n\t\t\t\t\t\tundetermined = false;\n\t\t\t\t\t\tcond = false;\n\t\t\t\t\t\tdone(err, true);\n\t\t\t\t\t\tconn.removeAllListeners();\n\t\t\t\t\t\tconn.destroy(); //destroy socket manually\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconn.on('undetermined', function () {\n\t\t\t\t\tj++;\n\t\t\t\t\t//in case of an unrecognisable response tell the callback we're not sure\n\t\t\t\t\tcond = true;\n\t\t\t\t\tres = false;\n\t\t\t\t\tundetermined = true;\n\t\t\t\t\tdone(err, false, true);\n\n\t\t\t\t\tconn.removeAllListeners();\n\t\t\t\t\tconn.destroy(); //destroy socket manually\n\n\t\t\t\t});\n\t\t\t\tconn.on('timeout', function () {\n\t\t\t\t\tconn.emit('undetermined');\n\t\t\t\t});\n\t\t\t\tconn.on('data', function(data) {\n\t\t\t\t\tif(data.indexOf(\"220\") == 0 || data.indexOf(\"250\") == 0 || data.indexOf(\"\\n220\") != -1 || data.indexOf(\"\\n250\") != -1) {\n\t\t\t\t\t\tconn.emit('prompt');\n\t\t\t\t\t} else if(data.indexOf(\"\\n550\") != -1 || data.indexOf(\"550\") == 0) {\n\t\t\t\t\t\tconn.emit('false');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconn.emit('undetermined');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}, function () {\n\t\t\treturn j < addresses.length && cond\n\t\t},function (err) {\n\t\t\tcallback(err, res, undetermined);\n\t\t})\n\t});\n};\n\n// compatibility\nmodule.exports.check = module.exports;\n"]},"metadata":{},"sourceType":"script"}